//===================================================================================================================================
//【DebugBox.cpp】
// [作成者]HAL東京GP12A332 11 菅野 樹
// [作成日]2019/09/20
// [更新日]2019/09/24
//===================================================================================================================================
#include "DebugBox.h"
#include "Direct3D9.h"


//===================================================================================================================================
//【コンストラクタ】
//===================================================================================================================================
DebugBox::DebugBox(D3DXVECTOR3 size)
{
	D3DXCreateBox(getDevice(), size.x, size.y, size.z, &mesh, NULL);
}

//===================================================================================================================================
//【デストラクタ】
//===================================================================================================================================
DebugBox::~DebugBox()
{
	SAFE_RELEASE(mesh);
}

//===================================================================================================================================
//【描画】
//===================================================================================================================================
void DebugBox::render(D3DXMATRIX worldMatrix)
{
	LPDIRECT3DDEVICE9 device = getDevice();

	//ライティングモードを設定
	device->SetRenderState(D3DRS_LIGHTING, true);
	// レンダリングモードの設定
	device->SetRenderState(D3DRS_FILLMODE, D3DFILL_WIREFRAME);//ワイヤーフレーム表示

	//ワールドマトリックスの設定
	device->SetTransform(D3DTS_WORLD, &worldMatrix);

	// テクスチャの設定をNULLにする
	device->SetTexture(0, NULL);

	// マテリアル情報に対するポインタを取得
	D3DMATERIAL9 material;

	// マテリアル情報を赤色
	material.Diffuse = D3DCOLORVALUE(D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f));
	material.Ambient = D3DCOLORVALUE(D3DXCOLOR(0.0f, 1.0f, 0.0f, 1.0f));
	material.Specular = D3DCOLORVALUE(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
	material.Emissive = D3DCOLORVALUE(D3DXCOLOR(0.1f, 0.1f, 0.1f, 1.0f));
	material.Power = 120.0f;

	// マテリアルの設定
	device->SetMaterial(&material);

	//描画
	mesh->DrawSubset(0);

	device->SetRenderState(D3DRS_FILLMODE, D3DFILL_SOLID);//ソリッド表示

}
