//===================================================================================================================================
//ÅySkyVisionState.cppÅz
// [çÏê¨é“]HALìåãûGP12A332 11 êõñÏ é˜
// [çÏê¨ì˙]2019/11/17
// [çXêVì˙]2019/11/17
//===================================================================================================================================

//===================================================================================================================================
//ÅyÉCÉìÉNÉãÅ[ÉhÅz
//===================================================================================================================================
#include "SkyVisionState.h"
#include "DigitalShiftState.h"
#include "NormalState.h"
#include "Input.h"

//===================================================================================================================================
//ÅyusingêÈåæÅz
//===================================================================================================================================
using namespace playerNS;
using namespace skyVisionNS;

//===================================================================================================================================
//ÅyÉRÉìÉXÉgÉâÉNÉ^Åz
//===================================================================================================================================
SkyVisionState::SkyVisionState(Player* player) :AbstractState()
{
	this->player	= player;
	stateTimer		= 0.0f;
	type			= SKY_VISION;
	nextType		= NORMAL;
	stateName		= "SKY_VISION";
	onTrans			= false;
	player->setValidOperation(
		ENABLE_CANCEL_SKY_VISION);

}

//===================================================================================================================================
//ÅyÉfÉXÉgÉâÉNÉ^Åz
//===================================================================================================================================
SkyVisionState::~SkyVisionState()
{

}

//===================================================================================================================================
//ÅyäJénèàóùÅz
//===================================================================================================================================
void SkyVisionState::start()
{
}

//===================================================================================================================================
//ÅyçXêVÅz
//===================================================================================================================================
void SkyVisionState::update(float frameTime)
{
	this->frameTime = frameTime;
	stateTimer += frameTime;

	//ìdóÕè¡îÔ
	costTimer += frameTime;
	if (costTimer > COST_TIME)
	{
		player->addpower(-COST);
		costTimer = 0.0f;
	}

	//èÛë‘ëJà⁄
	if (player->cancelSkyVision())				return;	//ÉLÉÉÉìÉZÉã
	else if (player->digitalShift())			return;	//ÉfÉWÉ^ÉãÉVÉtÉg
	else if (player->getPower() <= 0)
	{
		player->returnTransitionCamera(0.5f);

		player->transState(NORMAL);		return;	//í èÌèÛë‘
	}

}


//===================================================================================================================================
//ÅyëÄçÏÅz
//===================================================================================================================================
void SkyVisionState::operation()
{
	// ëÄçÏ
}

//===================================================================================================================================
//Åyï®óùèàóùÅz
//===================================================================================================================================
void SkyVisionState::physics()
{
}

//===================================================================================================================================
//ÅyÉJÉÅÉâëÄçÏÅz
//===================================================================================================================================
void SkyVisionState::controlCamera()
{
	//ÉJÉÅÉâëJà⁄
	player->transitionCamera();
	//è„ãÛÉJÉÅÉâÇëÄçÏ
	player->controlSkyCamera();
}

//===================================================================================================================================
//ÅyèÛë‘ëJà⁄Åz
//===================================================================================================================================
AbstractState* SkyVisionState::transition()
{
	switch (nextType)
	{
	case DIGITAL_SHIFT:
		return new digitalShiftNS::DigitalShiftState(player);
		break;
	case NORMAL:default:
		return new normalNS::NormalState(player);
		break;
	}
}

//===================================================================================================================================
//ÅyèIóπèàóùÅz
//===================================================================================================================================
void SkyVisionState::end()
{

}

