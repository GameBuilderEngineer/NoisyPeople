//-----------------------------------------------------------------------------
// TIGERアニメーション[TigerAnimation.cpp]
// Author : HAL東京昼間部 2年制ゲーム学科 GP12A332 32 中込和輝
// 作成開始日 : 2019/12/12
//-----------------------------------------------------------------------------
#include "TigerAnimation.h"
using namespace::tigerAnimNS;

///////////////////////////////////////////////////////////////////////////////
////////////////////////////// アニメーション /////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//=============================================================================
// デフォルトアニメーション
//=============================================================================
void DefaultAnimation::update(float t)
{
	PartsAnimation::update(t);
}


//=============================================================================
// 移動アニメーション
//=============================================================================
void MoveAnimation::update(float t)
{
	PartsAnimation::update(t);
}


//=============================================================================
// 攻撃アニメーション
//=============================================================================
void AttackAnimation::update(float t)
{
	PartsAnimation::update(t);
}


//=============================================================================
// ショットアニメーション
//=============================================================================
void ShotAnimation::update(float t)
{
	PartsAnimation::update(t);
}


///////////////////////////////////////////////////////////////////////////////
/////////////////////////  アニメーションマネージャー /////////////////////////
///////////////////////////////////////////////////////////////////////////////
//=============================================================================
// コンストラクタ
//=============================================================================
TigerAnimationManager::TigerAnimationManager(int partsMax, Object* parent, Object** parts)
	: PartsAnimationManager(partsMax, parent, parts)
{

}


//=============================================================================
// デストラクタ
//=============================================================================
TigerAnimationManager::~TigerAnimationManager()
{

}


//=============================================================================
// 初期化
//=============================================================================
void TigerAnimationManager::initialize()
{
	PartsAnimationManager::initialize();
}


//=============================================================================
// 更新処理
//=============================================================================
void TigerAnimationManager::update(float frameTime)
{
	if (flagState & ANIMATION_FLAG[DEFAULT])
	{
		defaultAnimation.update(frameTime * ANIMATION_SPEED[DEFAULT]);
	}
	if (flagState & ANIMATION_FLAG[MOVE])
	{
		moveAnimation.update(frameTime * ANIMATION_SPEED[MOVE]);
	}
	if (flagState & ANIMATION_FLAG[ATTACK])
	{
		attackAnimation.update(frameTime * ANIMATION_SPEED[ATTACK]);
	}
	if (flagState & ANIMATION_FLAG[SHOT])
	{
		shotAnimation.update(frameTime * ANIMATION_SPEED[SHOT]);
	}

	culcPartsWorldMatrix();
}
