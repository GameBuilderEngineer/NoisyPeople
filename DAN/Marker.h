//===================================================================================================================================
//【Marker.h】
// [作成者]HAL東京GP12A332 11 菅野 樹
// [作成日]2019/12/17
// [更新日]2019/12/17
//===================================================================================================================================
#pragma once

//===================================================================================================================================
//【インクルード】
//===================================================================================================================================
#include "Base.h"
#include "Sprite.h"
#include "InstancingBillboard.h"

//===================================================================================================================================
//【名前空間】
//===================================================================================================================================
namespace MarkerNS
{
	enum RenderMode
	{
		MODE_2D,
		MODE_3D,
	};

	enum MarkerType
	{
		PLAYER1,
		PLAYER2,
		BOSS_ENEMY,
		MARKER_NUM,
	};

}

//===================================================================================================================================
//【マーカークラス】
//===================================================================================================================================
class Marker :	public Base
{
private:
	MarkerNS::RenderMode				mode;
	Sprite*								sprite;
	InstancingBillboardNS::Instance		instance;
	
public:
	Marker();
	~Marker();
	void update(float frameTime);
	void render();

};

//===================================================================================================================================
//【マーカーレンダラークラス】
//===================================================================================================================================
class MarkerRenderer :	public InstancingBillboard
{
private:
	Marker marker[MarkerNS::MARKER_NUM];
public:
	MarkerRenderer();
	~MarkerRenderer();
	void update(float frameTime);
	void render();
};

