//===================================================================================================================================
//【Ray.h】
// [作成者]HAL東京GP12A332 11 菅野 樹
// [作成日]2019/09/20
// [更新日]2019/09/20
//===================================================================================================================================
#pragma once

//===================================================================================================================================
//【インクルード】
//===================================================================================================================================
#include "Base.h"

//===================================================================================================================================
//【レイクラス：コライダー】
//===================================================================================================================================
class Ray : public Base
{
public:
	//Data
	D3DXVECTOR3 start;		//始点
	D3DXVECTOR3 direction;	//方向

	float distance;			//衝突対象との距離
	D3DXVECTOR3 normal;		//衝突対象の法線
	D3DXCOLOR color;		//描画色

	//Method
	Ray();
	~Ray();
	void initialize(D3DXVECTOR3 _start,D3DXVECTOR3 _direction);
	void update(D3DXVECTOR3 _start,D3DXVECTOR3 _direction);
	void render(float length);
	void renderOnRelease(float length);	// 中込追記
	bool rayIntersect(LPD3DXMESH targetMesh, D3DXMATRIX targetMatrix);
	D3DXVECTOR3 slip(D3DXVECTOR3 L, D3DXVECTOR3 N);
	//HRESULT findVerticesOnPoly(LPD3DXMESH, DWORD, D3DXVECTOR3*);
};

