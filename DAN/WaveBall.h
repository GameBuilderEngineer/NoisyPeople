//===================================================================================================================================
//【WaveBall.h】
// [作成者]HAL東京GP12A332 16 蔡 友剛
// [作成日]2019/11/15
// [更新日]2019/11/15
//===================================================================================================================================
#pragma once

//===================================================================================================================================
//【インクルード】
//===================================================================================================================================
#include "Base.h"
#include "Sprite.h"

//===================================================================================================================================
//【定数】
//===================================================================================================================================
#define LINE_NUM_VERTEX (2)
// ２Ｄポリゴン頂点フォーマット( 頂点座標[2D] / 反射光)
#define	FVF_VERTEX_LINE	(D3DFVF_XYZRHW | D3DFVF_DIFFUSE)

//===================================================================================================================================
//【構造体】
//===================================================================================================================================
struct VertexLine
{
	D3DXVECTOR3		vtx;		// 頂点座標
	D3DCOLOR			diffuse;	// 反射光
};

//===================================================================================================================================
//波形ボールクラス
//===================================================================================================================================
class WaveBall
{
public:
	WaveBall();
	~WaveBall();

	void draw(void);

	static int dataMax;
	static float *fData;

	static void SetWaveData(int inDataMax, float *inFdata)
	{
		SAFE_DELETE_ARRAY(fData);
		dataMax = inDataMax - 1;
		fData = new float[dataMax];
		memset(fData, 0, dataMax * sizeof(float));
		memcpy(fData, inFdata, dataMax * sizeof(float));
	};

private:
	LPD3DXLINE pLine;
	VertexLine vertexWk[LINE_NUM_VERTEX]; // 頂点情報格納ワーク
};