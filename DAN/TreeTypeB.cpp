//===================================================================================================================================
//ÅyTreeTypeB.cppÅz
// [çÏê¨é“]HALìåãûGP12A332 11 êõñÏ é˜
// [çÏê¨ì˙]2019/10/14
// [çXêVì˙]2019/10/14
//===================================================================================================================================

//===================================================================================================================================
//ÅyÉCÉìÉNÉãÅ[ÉhÅz
//===================================================================================================================================
#include "TreeTypeB.h"

//===================================================================================================================================
//ÅyÉRÉìÉXÉgÉâÉNÉ^Åz
//===================================================================================================================================
TreeTypeB::TreeTypeB() {
	renderer = new StaticMeshObject(staticMeshNS::reference(staticMeshNS::GREEN_TREE_002));
	initialize();
};

//===================================================================================================================================
//ÅyÉfÉXÉgÉâÉNÉ^Åz
//===================================================================================================================================
TreeTypeB::~TreeTypeB() {
	SAFE_DELETE(renderer);
};

//===================================================================================================================================
//Åyèâä˙âªÅz
//===================================================================================================================================
void TreeTypeB::initialize() {
	D3DXVECTOR3 position;
	for (int i = 0; i < 400; i++)
	{
		position.x = (float)((rand() % 2000) - 1000);
		position.y = 0.0f;
		position.z = (float)((rand() % 2000) - 1000);
		generate(position);
	}
	needUpdate = true;
};

//===================================================================================================================================
//ÅyçXêVÅz
//===================================================================================================================================
void TreeTypeB::update()
{
	if (!needUpdate)return;
	renderer->update();
	needUpdate = false;
}

//===================================================================================================================================
//Åyï`âÊÅz
//===================================================================================================================================
void TreeTypeB::render(D3DXMATRIX view, D3DXMATRIX projection, D3DXVECTOR3 cameraPositon)
{
	renderer->render(*shaderNS::reference(shaderNS::INSTANCE_STATIC_MESH), view, projection, cameraPositon);
}

//===================================================================================================================================
//Åyê∂ê¨Åz
//===================================================================================================================================
void TreeTypeB::generate(D3DXVECTOR3 position)
{
	Object* object = new Object();
	renderer->generateObject(object);
	object->initialize(&position);
}
