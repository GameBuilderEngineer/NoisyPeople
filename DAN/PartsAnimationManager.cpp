//-----------------------------------------------------------------------------
// パーツアニメーションマネージャ [PartsAnimationManager.cpp]
// Author : HAL東京昼間部 2年制ゲーム学科 GP12A332 32 中込和輝
// 作成開始日 : 2019/12/12
//-----------------------------------------------------------------------------
#include "PartsAnimationManager.h"

//=============================================================================
// コンストラクタ
//=============================================================================
PartsAnimationManager::PartsAnimationManager(int _partsMax, Object* _parent, Object** _parts)
{
	partsMax = _partsMax;
	parent = _parent;
	parts = new Object*[partsMax];
	for (int i = 0; i < partsMax; i++)
	{
		parts[i] = _parts[i];
	}
}


//=============================================================================
// デストラクタ
//=============================================================================
PartsAnimationManager::~PartsAnimationManager()
{
	SAFE_DELETE_ARRAY(parts);
}


//=============================================================================
// 初期化
//=============================================================================
void PartsAnimationManager::initialize()
{
	flagState = 0;
}


//=============================================================================
// パーツのワールドマトリクスを算出
//=============================================================================
void PartsAnimationManager::culcPartsWorldMatrix()
{
	for (int i = 0; i < partsMax; i++)
	{
		D3DXMatrixMultiply(&parts[i]->matrixWorld, &parts[i]->matrixWorld, &parent->matrixWorld);
	}
}


//=============================================================================
// アニメーション起動
//=============================================================================
void PartsAnimationManager::activate(DWORD flag)
{
	flagState |= flag;
}


//=============================================================================
// アニメーション停止
//=============================================================================
void PartsAnimationManager::inactivate(DWORD flag)
{
	flagState &= ~flag;
}

