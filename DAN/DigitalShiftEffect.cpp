//===================================================================================================================================
//【DigitalShiftEffect.cpp】
// [作成者]HAL東京GP12A332 11 菅野 樹
// [作成日]2019/11/25
// [更新日]2019/11/25
//===================================================================================================================================

//===================================================================================================================================
//【インクルード】
//===================================================================================================================================
#include "DigitalShiftEffect.h"

//===================================================================================================================================
//【using宣言】
//===================================================================================================================================
using namespace DigitalShiftEffectNS;

//===================================================================================================================================
//【コンストラクタ】
//===================================================================================================================================
DigitalShiftEffect::DigitalShiftEffect()
{
	sphereList			= new LinkedList<Object*>;
	sphereRenderer		= new StaticMeshRenderer(staticMeshNS::reference(staticMeshNS::DIGITAL_SPHERE));
	onPlayedSelectLight = false;
};

//===================================================================================================================================
//【デストラクタ】
//===================================================================================================================================
DigitalShiftEffect::~DigitalShiftEffect()
{
	//レンダラーの解除/終了
	sphereRenderer->allUnRegister();
	SAFE_DELETE(sphereRenderer);
	//オブジェクトリストの削除
	sphereList->terminate();
	SAFE_DELETE(sphereList);
}


//===================================================================================================================================
//【更新】
//===================================================================================================================================
void DigitalShiftEffect::update(float frameTime)
{
	for (int i = 0; i < sphereList->nodeNum; i++)
	{
		//オブジェクトのポインタ取得
		Object* object = (*sphereList->getValue(i));

		if (object->existenceTimer > 0.5f)
		{
			object->scale += D3DXVECTOR3(1.0f,1.0f,1.0f)*frameTime;
		}

		//更新
		object->update();

		//生存時間の更新
		if (object->existenceTimer > 0)
		{
			object->existenceTimer -= frameTime;
		}

	}

	//レンダラーの更新
	sphereRenderer->update();

	//自動削除処理
	autoDestroy();

}
//===================================================================================================================================
//【更新】
//===================================================================================================================================
void DigitalShiftEffect::updateSelectLight(D3DXVECTOR3 position)
{
	if (selectLight == NULL)return;

}

//===================================================================================================================================
//【更新】
//===================================================================================================================================
void DigitalShiftEffect::render(D3DXMATRIX view, D3DXMATRIX projection, D3DXVECTOR3 cameraPosition)
{
	//デジタルスフィアの描画
	sphereRenderer->render(*shaderNS::reference(shaderNS::INSTANCE_STATIC_MESH), view, projection, cameraPosition);
}

//===================================================================================================================================
//【再生：同時再生可能】
//===================================================================================================================================
void DigitalShiftEffect::play(int type,D3DXVECTOR3 position)
{

	//シフト開始エフェクト
	if (type & START_SHIFT)
	{
		playStartShift(position);
	}

	//シフト実行中エフェクト
	if (type & RUNNING_SHIFT)
	{
		playRunningShift(position);
	}

	//終了エフェクト
	if (type & END_SHIFT)
	{
		playEndShift(position);
	}

}

//===================================================================================================================================
//【再生：シフト開始エフェクト】
//===================================================================================================================================
void DigitalShiftEffect::playStartShift(D3DXVECTOR3 position)
{	
	createDigitalSphere(position,START_TIME);
}

//===================================================================================================================================
//【再生：シフト実行中エフェクト】
//===================================================================================================================================
void DigitalShiftEffect::playRunningShift(D3DXVECTOR3 position)
{
	createDigitalSphere(position,RUNNING_TIME);
}

//===================================================================================================================================
//【再生：シフト終了エフェクト】
//===================================================================================================================================
void DigitalShiftEffect::playEndShift(D3DXVECTOR3 position)
{
	createDigitalSphere(position,END_TIME);
}

//===================================================================================================================================
//【再生：選択ライトエフェクト】
//===================================================================================================================================
void DigitalShiftEffect::playSelectLight(int no,D3DXVECTOR3* position)
{
	//エフェクトの生成
	selectLight = new SelectLight(no,position);
	effekseerNS::play(no,selectLight);
}

//===================================================================================================================================
//【停止：選択ライトエフェクト】
//===================================================================================================================================
void DigitalShiftEffect::stopSelectLight(int no)
{
	//エフェクトの停止
	effekseerNS::stop(no,selectLight);
}

//===================================================================================================================================
//【表示/非表示：選択ライトエフェクト】
//===================================================================================================================================
void DigitalShiftEffect::shownSelectLigth(bool shown)
{
	selectLight->setShown(shown);
}

//===================================================================================================================================
//【オブジェクト生成：シフト終了エフェクト】
//===================================================================================================================================
void DigitalShiftEffect::createDigitalSphere(D3DXVECTOR3 position,float runTime)
{
	//オブジェクトを生成
	Object* object = new Object();

	object->position = position;

	//生存時間の設定
	object->existenceTimer = runTime;

	//リスト先頭へ追加
	sphereList->insertFront(object);

	//リストの更新[追加による対応]
	sphereList->listUpdate();

	//レンダラーへ登録
	sphereRenderer->registerObject(object);

}


//===================================================================================================================================
//【自動削除】
//===================================================================================================================================
void DigitalShiftEffect::autoDestroy()
{
	//オブジェクトの削除
	for (int i = 0; i < sphereList->nodeNum; i++)
	{
		//オブジェクトのポインタ取得
		Object* object = (*sphereList->getValue(i));
		//残存時間があれば削除しない
		if (object->existenceTimer > 0)continue;
		Node<Object*>* node = sphereList->getNode(i);
		//削除
		SAFE_DELETE(object);
		sphereList->remove(node);
	}
	sphereList->listUpdate();

}